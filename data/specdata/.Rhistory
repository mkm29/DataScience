B[1,1]
B[1,1] <- 1
diag(B)
diag(B) <- c(1,1,1,1,1)
B
sum(A)
R <- B
B <- matrix(rnorm(25, 2), nrow = 5)
B
A
R
total = sum(sum(A*B).*R)
B.*R
R
B %*% R
B
total = sum(sum(A*B)%*%R)
C = (A*B) %*% R
C
sum(C)
sum(sum(A*B)*R)
C = (A*B)*R
sum(C)
?rnorm
x <- rnorm(10)
x
clc
A <- matrix(c(2,3,4,3,2,0,1,5,2,7), byrow = T, nrow = 5)
A
A <- matrix(c(2,3,4,3,2,0,1,5,2,7), nrow = 5)
A
B <- matrix(c(6,7,5,8,3,2,1,1,2,1), nrow = 2)
B
B <- matrix(c(6,7,5,8,3,2,1,1,2,1), nrow = 2, byrow = T)
B
A %*% B
A
B
A %*% B
2+4+6+3+1
16*32
factorial(3)
factorial(512)
9^(1/3)
1^.5
2^.5
1^(1/6)
9^.5
install.packages(c("assertthat", "backports", "BH", "bit64", "boot", "car", "caret", "checkmate", "cluster", "commonmark", "crayon", "curl", "DBI", "desc", "devtools", "doParallel", "dplyr", "effects", "epiR", "evaluate", "flexmix", "foreign", "formatR", "Formula", "gdata", "git2r", "gridExtra", "Hmisc", "htmltools", "htmlwidgets", "httpuv", "httr", "igraph", "irlba", "JGR", "knitr", "lattice", "lme4", "markdown", "MASS", "Matrix", "mclust", "memoise", "mgcv", "multcomp", "mvtnorm", "openssl", "psych", "purrr", "quantmod", "quantreg", "R6", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppEigen", "readxl", "reshape", "RMySQL", "rpart", "rstudioapi", "rts", "sandwich", "scales", "scatterplot3d", "shiny", "sigmoid", "sourcetools", "sp", "SparseM", "stringi", "survival", "svd", "tibble", "tidyr", "TTR", "usdm", "viridis", "viridisLite", "withr", "XML", "xts", "zoo"))
library('Quandl')
BAE <- Quandl("LSE/BA.")
BAE <- Quandl("LSE/BA")
View(BAE)
a <- matrix(c(1,2,3,4,5,6), byrow = T, nrow = 2)
a
b <- matrix(c(100,200,300), byrow = T, nrow = 1)
b
a + b
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec(user = FALSE)
IRkernel::installspec()
library(IRkernel)
IRkernel::installspec(user = FALSE)
log(1)
x <- 4.7
1/(1+exp(-x))
x <- -4.7
1/(1+exp(-x))
exp(1)
exp(-4)
exp(1)
exp(-4)
z <- 0
z
exp(1)
exp(0)
log(base = 2,2)
log(base = 2,1)
log(base = 2,10)
log(2)
holding <- 0.024813
rate <- 14526.51
holding*rate
20/rate
holding-0.001376793
fee <- 25
holding - (fee/rate)
0.05672377*rate
2845*1000/3000
948*2
n<-500
3245*n/3400
2845*n/3000
3245-2845
500/3400
s<-0.147
200*s
3245/477
477/3245
500-29-29
477-28-28
477*2
421*2
442*2
477*3
421*3
442*3
factanal(0)
?rnorm
x <- rnorm(10)
x
norm(x)
?norm
norm(x, typ)
norm(x, type = "F")
typeof(x)
norm(as.numeric(x))
convRate <- 10699
0.0033 * convRate
0.0270 * convRate
0.0101 * convRate
0.0115 * convRate
0.0146 * convRate
0.0146 * convRate
0.0040 * convRate
0.0230 * convRate
0.0154 * convRate
0.0117 * convRate
0.0434 * convRate
rate <- 11375.01
0.0037*rate
0.2679*rate
0.0585*rate
665/113
0.0037*rate
0.3694*rate
0.0567277*rate
0.0074 *rate
0.0507*rate
0.0873*rate
0.0011*rate
0.0400*rate
0.0873 *rate
0.0085*rate
0.0005 * rate
0.0058*rate
0.0008*rate
(0.0005+0.002)*rate
0.0014*rate
0.0052*rate
(0.0033+0.003)*rate
0.0529*rate
(0.0579+0.031)*rate
(0.0125+0.01)*rate
(0.0206+0.01)*rate
0.018*rate
(0.0097+0.022)*rate
0.0105*rate
(0.0202+0.031)*rate
(0.0712+0.007)*rate
(0.0198+0.009)*rate
(0.0148+0.007)*rate
(0.0200+0.008)*rate
0.0052*rate
0.027*rate
0.03*rate
0.04*rate
0.05*rate
.13*rate
0.09*rate
rate = 11360
(0.0037+0.007)*rate
0.006*rate
0.0106*rate
(0.0122+0.008)*rate
(0.0072+0.008)*rate
172.67/7
(0.0044+0.008)*rate
(0.0122+0.008)*rate
229.472/14
0.0052*rate
0.0053*rate
(0.0392+0.012)*rate
(0.0133+0.007)*rate
230.608/14
0.007*2*rate
159/7
(0.0147+0.02)*rate
(0.0275+0.02)*rate
(0.0176+0.02)*rate
0.0130*rate
(0.0088+0.012)*rate
(0.0146+0.011)*rate
(0.0037+0.009)*rate
(0.0029+0.007)*rate
(0.0260+0.009)*rate
(0.0129+0.013)*rate
?lm
100/14.38
rates <- matrix(c(46.29,48.19,53.7,59.25), byrow = T)
rates
rates <- matrix(c(46.29,48.19,53.7,59.25), byrow = T, nrow = 2)
rates
rates/14.38
rate <- 9854.88
0.0097*rate
0.0133*rate
0.0133*rate/10
0.0134*rate
pi
options(digits = 10)
pi
z <- NULL
rm(z)
?head
install.packages("slidify")
library(devtools)
?install_github
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
install_github('ramnathv/slidifyLibraries', 'ramnathv')
library(slidify)
?slidify
install.packages("ggplot2")
source("http://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite()
install.packages("KernSmooth")
load(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
rate <- 9985.01
0.006 * rate
0.007 * rate
0.002 * rate
.01 * rate
library(swirl)
swirl()
play()
my_name
nxt()
c(my_char, "your_name_here")
info()
skip()
skip()
skip()
ino()
info()
main()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100).
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
?swirl
swirl()
info()
bye()
swirl(resume.class = "default")
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Mitchell Murphy")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3,c("X","Y","Z")), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y >0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect) <- c("foo", "bar", "norf")
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, byrow = F)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_vector, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- colnames(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
bye()
x <- sample(c(0,1),1000)
?sample
x <- sample(c(0,1),1,100)
x
x <- sample(c(0,1),n=1,size=100)
getwd()
directory <- "/Users/mitchellmurphy/DataScience/datasets/specdata/"
setwd(directory)
setwd(""/Users/mitchellmurphy/DataScience/datasets/specdata/"")
setwd("/Users/mitchellmurphy/DataScience/datasets/specdata/")
setwd("/Users/mitchellmurphy/DataScience/datasets/specdata/")
setwd("/Users/mitchellmurphy/Desktop/DataScience/datasets/specdat/")
dir()
?match.fun
dir()
directory <- "~/Desktop/DataScience/datasets/specdata"
setwd(directory)
dir()
fnames <- dir()
fnames <- dir()[1:10]
data <- lapply(fnames, read.csv)
View(data)
data <- as.data.frame(lapply(fnames, read.csv))
View(data)
?apply
data <- apply(fnames, 1, read.csv)
dim(fnames)
class(fnames)
as.matrix(fnames)
data <- apply(as.matrix(fnames), 1, read.csv)
View(data)
fnames <- dir()[1:10]
data <- lapply(fnames, read.csv)
View(data)
View(data)
data.1 <- data[[1]]
View(data.1)
comp <- lapply(data, complete.cases)
View(comp)
data.complete <- data[comp,]
data1 <- data[[1]]
data1.comp <- subset(data1,comp)
data1.comp <- subset(data1,comp[[1]])
View(data1.comp)
View(data)
View(data)
lapply(data, mean)
View(comp)
View(comp)
data.complete <- lapply(data, subset, data, comp)
?subset
data.complete <- lapply(data, subset, comp)
?runif
runif(1)
runif(10)
?rnorm
rnorm(10)
?runif
x <- 1:4
f1 <- lapply(x, runif)
f1
f2 <- lappl(x,rnorm)
f2 <- lapply(x,rnorm)
f2
lapply(x,runif,max=10)
lapply(x,runif,digits = 10)
lapply(x,runif)
runif(x)
round(runif(x), digits = 10)
round(runif(x), digits = 12)
options(digits = 12)
runif(x)
x
lapply(x, function(y) { return(sqrt(x)/x) })
sqrt(4)
sqrt(4)/4
setwd(directory)
fnames <- dir()[1:10]
setwd(directory)
fnames <- dir()[1:10]
directory <- "~/Desktop/DataScience/datasets/specdata"
exists(x)
exists(myVarName, envir = .GlobalEnv)
get0(x)
if(exists(directory)) {
setwd(directory)
}
getwd()
rm(fnames)
if(exists(directory)) {
setwd(directory)
fnames <- dir()[1:10]
data <- apply(as.matrix(fnames), 1, read.csv)
}
if(get0(directory) != NULL) {
setwd(directory)
fnames <- dir()[1:10]
data <- apply(as.matrix(fnames), 1, read.csv)
}
x <- get0(directory)
x
if(get0(directory)) {
setwd(directory)
fnames <- dir()[1:10]
data <- apply(as.matrix(fnames), 1, read.csv)
}
if(!is.null(get0(directory))) {
setwd(directory)
fnames <- dir()[1:10]
data <- apply(as.matrix(fnames), 1, read.csv)
}
if(!is.null(directory)) {
setwd(directory)
print(directory)
}
if(!is.null(directory)) {
setwd(directory)
fnames <- dir()[1:10]
data <- apply(as.matrix(fnames), 1, read.csv)
}
data <- sapply(fnames, read.csv)
View(data)
mat <- matrix(runif(9), nrow = 3, ncol = 3)
mat
dim(matrix(data, nrow = rows, ncol = cols))
dim(mat)
d <- dim(mat)
d
d[1]
d[2]
d[3]
rm(data)
rm(c(d,mat,x))
rm(c("d","mat","x"))
rm(d)
rm(mat)
rm(x)
?quantile
a <- array(rnorm(2*2*10), c(2,2,10))
a

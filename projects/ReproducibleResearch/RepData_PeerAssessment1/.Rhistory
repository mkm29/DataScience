setwd("~/Developer/DataScience/projects/ReproducibleResearch/RepData_PeerAssessment1/")
library(dplyr)
library(ggplot2)
library(knitr)
library(Hmisc)
if(!file.exists("activity.csv")) {
if(!file.exists("activity.zip")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
}
# need to download the zip file and then unzip it
unzip("activity.zip")
}
activityData <- read.csv("activity.csv")
# need to convert the date column into an R date, so we can extract the day of week from it.
activityData$date <- with(activityData, as.POSIXct(date))
activityData$day <- with(activityData, weekdays(date))
activityData$timestamp <- with(activityData, date+interval)
setwd("~/Developer/DataScience/projects/ReproducibleResearch/RepData_PeerAssessment1/")
library(dplyr)
library(ggplot2)
library(knitr)
library(Hmisc)
if(!file.exists("activity.csv")) {
if(!file.exists("activity.zip")) {
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip", destfile = "activity.zip")
}
# need to download the zip file and then unzip it
unzip("activity.zip")
}
activityData <- read.csv("activity.csv")
# need to convert the date column into an R date, so we can extract the day of week from it.
activityData$date <- with(activityData, as.POSIXct(date))
activityData$day <- with(activityData, weekdays(date))
activityData$timestamp <- with(activityData, date+interval)
daily <- activityData %>% group_by(date) %>%  summarise(TotalSteps = sum(steps, na.rm = T),
MeanSteps = mean(steps, na.rm = T),
MedianSteps = median(steps, na.rm = T))
intervals <- activityData %>% group_by(interval) %>% summarise(Max = max(steps, na.rm = T))
plot(intervals, xlab = "Interval", ylab = "Steps", main = "Average Steps Per Time Interval")
which.max(intervals$Max)
activityDataImputed <- activityData
activityDataImputed$steps <- impute(activityData$steps)
dailyImputed <- activityDataImputed %>% group_by(date) %>% summarise(steps = sum(steps, na.rm = T))
ggplot(dailyImputed, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 500) +
labs(x = "Steps", y = "Frequency")
length(is.na(activityData$steps))
length(activityData$steps)
sum(is.na(activityData$steps))
numMissing <- sum(is.na(activityData$steps))
100*numMissing/length(activityData$steps)
daily
dailyImputed
activityDataImputed <- activityData
activityDataImputed$steps <- impute(activityData$steps)
dailyImputed <- activityDataImputed %>% group_by(date) %>% summarise(steps = sum(steps, na.rm = T),
MeanSteps = mean(steps, na.rm = T),
MedianSteps = median(steps, na.rm = T))
ggplot(dailyImputed, aes(x = steps)) +
geom_histogram(fill = "blue", binwidth = 500) +
labs(x = "Steps", y = "Frequency")
dailyImputed
daily
dailyImputed
head(activityData)
activityData$weekend <- with(activityData, ifelse(day %in% c("Saturday", "Sunday"), TRUE, FALSE))
head(activityData)
x <- activityData %>% group_by(interval)
head(x)
x <- activityData %>% group_by(timestamp, weekend)
head(x)
with(x, plot(timestamp, steps, col=weekend))
weekday <- subset(activityData, weekend == FALSE)
weekend <- subset(activityData, weekend == TRUE)
weekday <- subset(activityData, weekend == FALSE) %>% group_by(interval) %>% summarise(Max = max(steps, na.rm = T))
weekend <- subset(activityData, weekend == TRUE) %>% group_by(interval) %>% summarise(Max = max(steps, na.rm = T))
plot(weekday)
plot(weekday, col = "purple")
par(new = TRUE)
plot(weekend, col = "red")
head(subset(activityData, weekend == TRUE))

}
rep(c(0,1),5)
dataMatrix <- matrix(rnorm(400), nrow = 40)
for (i in 1:40) {
coinFlip1 <- rbinom(1,1,0.5)
coinFlip2 <- rbinom(1,1,0.5)
if (coinFlip1) {
print(paste("set row", i, sep = " "))
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,1), each = 5)
}
if (coinFlip2) {
print(paste("set row", i, sep = " "))
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,1), 5)
}
}
dataMatrix
set.seed(678910)
dataMatrix <- matrix(rnorm(400), nrow = 40)
for (i in 1:40) {
coinFlip1 <- rbinom(1,1,0.5)
coinFlip2 <- rbinom(1,1,0.5)
if (coinFlip1) {
print(paste("set row", i, sep = " "))
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,1), each = 5)
}
if (coinFlip2) {
print(paste("set row", i, sep = " "))
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,1), 5)
}
}
dataMatrix
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
svd2 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(svd2$v[,1], pch = 19, ylab = "First right singular vector")
plot(svd2$v[,2], pch = 19, ylab = "Second right singular vector")
par(mfrow = c(1,2))
plot(svd2$d, xlab = "Column", ylab = "Signular value", pch = 19)
plot(svd2$d^2/sum(svd2$d^2), xlab = "Column", ylab = "Prop. of variance explained", pch = 19)
svd2$d
svd2$d^2/sum(svd2$d^2)
svd1$d^2/sum(svd1$d^2)
source("https://bioconductor.org/biocLite.R")
source("https://bioconductor.org/biocLite.R")
biocLite("impute")
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite()
## try http:// if https:// URLs are not supported
source("https://bioconductor.org/biocLite.R")
biocLite("impute")
library(impute)
dataMatrix <- matrix(rnorm(400), nrow = 40)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
dataMatrix2 <- dataMatrixOrdered
dataMatrix2[sample(1:100,size = 40, replace = F)]
dataMatrix2 <- dataMatrixOrdered
dataMatrix2[sample(1:100,size = 40, replace = F)] <- NA
dataMatrix2
dataMatrix2 <- impute.knn(dataMatrix2)$data
dataMatrix2
svd1 <- svd(scale(dataMatrixOrdered))
svd2 <- svd(scale(dataMatrix2))
svd1 <- svd(scale(dataMatrixOrdered))
svd2 <- svd(scale(dataMatrix2))
par(mfrow = c(1,2)); plot(svd1$v[,1], pch = 19); plot(svd2$v[,1], pch = 19)
dim(svd2$d)
svd2$d
length(svd2$d)
dim(svd2$u)
dim(svd2$v)
heat.colors()
heat.colors(1)
heat.colors(100)
topo.colors(100)
library(grDevices)
colors()
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(0.5)
35/5330000
1/6.566604e-06
install.packages("RColorBrewer")
library(RColorBrewer)
cols <- brewer.pal(5, "BuGN")
cols <- brewer.pal(5, "BuGn")
cols
pal <- colorRampPalette(cols)
pal(1)
?rgb
rgb(0,1,0)
rgb(0,1,0, alpha = 0.5)
rgb(0,1,0, alpha = 1)
x <- rnorm(1000)
y <- rnorm(1000)
plot(x,y)
par(mfrow = c(1,1))
plot(x,y)
plot(x,y, col = rgb(0,0,0,0.2))
plot(x,y, col = rgb(0,0,0,0.2), pch = 19)
smoothScatter(x,y)
source('~/Desktop/DataScience/smartphone_analysis.R')
source('~/Desktop/DataScience/smartphone_analysis.R')
projectDirectory
dataDirectory
paste0(dataDirectory, "/UCI HAR Dataset.zip")
source('~/Desktop/DataScience/smartphone_analysis.R')
source('~/Desktop/DataScience/smartphone_analysis.R')
source('~/Desktop/DataScience/smartphone_analysis.R')
projectDataDirectory
setwd(projectDataDirectory)
dir()
source('~/Desktop/DataScience/smartphone_analysis.R')
head(x.train)
View(y.train)
source('~/Desktop/DataScience/smartphone_analysis.R')
head(train.subject)
head(train.y)
names(train.x)
source('~/Desktop/DataScience/smartphone_analysis.R')
source('~/Desktop/DataScience/smartphone_analysis.R')
View(features)
source('~/Desktop/DataScience/smartphone_analysis.R')
names(train.x)
names(train.x) <- as.character(features[,2])
colnames(train.x)
colnames(train.x) <- features$V2
source('~/Desktop/DataScience/smartphone_analysis.R')
head(train.x)
View(train.x)
?rm
View(activity.labels)
activity.labels[,2]
al <- activity.labels[,2]
al
source('~/Desktop/DataScience/smartphone_analysis.R')
View(activity.labels)
source('~/Desktop/DataScience/smartphone_analysis.R')
View(activity.labels)
View(train.subject)
names(train.x)
names(train.x)[1:12]
table(train.y)
View(train.y)
37/5330000
1/6.941839e-06
6.941839e-06*377165
library(swirl)
swirl()
swirl()
install.packages("fields")
library(fields)
install.packages("fields")
library(fields)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
12
abline(h = 0.05, col = "green")
View(dFsm)
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y,pch = 19, cex=2, col = cols1[newClust]
)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch=19,cex=2,col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch=9, cex=2,lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y,kmObj$cluster,pch=19,cex=2)
plot(x,y,col = kmObj$cluster,pch=19,cex=2)
points(kmObj$centers[,1], kmObj$centers[,2], col = c("black", "red", "green"), pch = 3, cex=3, lwd=3)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex=3, lwd=3)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col = kmeans(dataFrame,6)$cluster, pch=19, cex=2)
summary(kmObj)
kmObj
kmObj2 <- kmeans(dataFrame, centers = 4)
kmObj2
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPath.R")
myedit("addPatt.R")
source("addPatt.R", local = T)
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
120000/0.07
120000/0.03
120000/0.01
120000/0.02
120000/0.017
install.packages("slidify")
library(devtools)
install_github('slidify', 'ramnathv')
install_github("ramnathv/slidify")
install_github('slidifyLibraries', 'ramnathv')
install_github("ramnathv/slidifyLibraries")
data("airquality")
head(airquality)
?lm
ozone.temp <- lm(Ozone ~ Temp, data = airquality)
str(ozone.temp)
summary(ozone.temp)
x <- summary(ozone.temp)
x$adj.r.squared
head(airquality)
library(dplyr)
model <- lm(Ozone ~ Wind + Temp + Solar.R | Month, data = airquality)
summary(model)
x <- summary(model)
str(x)
model <- lm(Ozone ~ Wind + Temp + Solar.R, data = airquality)
summarise(mode())
summary(model)
head(airquality)
Sys.Date()
format(Sys.Date(), format = "%m/%d/$y")
format(Sys.Date(), format = "%m/%d/%y")
?par
library(dplyr, warn.conflicts = F)
suppressWarnings(library(dplyr, warn.conflicts = F))
si <- sessionInfo()
class(si)
si
sessionInfo()
si$platform
si$basePkgs
Sys.time()
as.numeric(Sys.time())
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(reshape2)
library(RColorBrewer)
setwd("~/Desktop/DataScience/coursera/projects/ExData/project2/")
# make sure the data files are there. If not download them
if(!dir.exists("NEI")) {
# does zip file already exist?
if(!file.exists("NEI.zip")) {
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip", destfile = "NEI.zip")
}
unzip("NEI.zip", exdir = "NEI")
file.remove("NEI.zip")
}
SCC <- readRDS("NEI/Source_Classification_Code.rds")
NEI <- readRDS("NEI/summarySCC_PM25.rds")
head(SCC)
cats <- unique(SCC$Data.Category)
cats
SCC$Motor <- with(SCC, Data.Category == "Onroad")
head(SCC)
head(subset(SCC, Data.Category == "Onroad"))
head(SCC)
SCC$Coal <- with(SCC, grepl("[Cc]oal", Short.Name, perl = T))
head(SCC)
SCC <- readRDS("NEI/Source_Classification_Code.rds")
SCC$Motor <- with(SCC, Data.Category == "Onroad")
SCC$Coal <- with(SCC, grepl("[Cc]oal", Short.Name, perl = T))
NEI <- readRDS("NEI/summarySCC_PM25.rds")
display.brewer.all()
brewer.pal(8,"Set3")
getwd()
SCC <- readRDS("NEI/Source_Classification_Code.rds")
SCC$Motor <- with(SCC, Data.Category == "Onroad")
SCC$Coal <- with(SCC, grepl("[Cc]oal", Short.Name, perl = T))
NEI <- readRDS("NEI/summarySCC_PM25.rds")
yearly <- NEI.SCC %>% group_by(year) %>% summarise(TotalEmissions = sum(Emissions),
MeanEmissions = mean(Emissions),
MedianEmissions = median(Emissions),
Observations = n())
head(NEI)
NEI.SCC <- merge.data.frame(NEI, SCC, by = "SCC")
yearly <- NEI.SCC %>% group_by(year) %>% summarise(TotalEmissions = sum(Emissions),
MeanEmissions = mean(Emissions),
MedianEmissions = median(Emissions),
Observations = n())
Observations = n())
r <- c(0, 800+range(yearly$TotalEmissions)[2]/1000)
par(mfrow = c(1,1)); plot.new();
p1 <- barplot(height = yearly$TotalEmissions/1000, names.arg = yearly$year,
ylab = "Total PM2.5 Emissions in kilotons",
main = "PM2.5 Emissions, United States 1999-2008",
col = brewer.pal(4,"PRGn"), xlab = "Year", ylim = r)
text(x = p1, y = round(yearly$TotalEmissions/1000,0),
labels = round(yearly$TotalEmissions/1000,0), pos = 3)
baltimore <- subset(NEI.SCC, fips == "24510")
la <- subset(NEI.SCC, fips == "06037")
baltimore.yearly <- baltimore %>% group_by(year) %>% summarise(Total = sum(Emissions))
la.yearly <- la %>% group_by(year) %>% summarise(Total = sum(Emissions))
r <- c(0, 800+range(yearly$Total)[2]/1000)
head(yearly)
yearly <- NEI.SCC %>% group_by(year) %>% summarise(Total = sum(Emissions))
baltimore <- subset(NEI.SCC, fips == "24510")
la <- subset(NEI.SCC, fips == "06037")
baltimore.yearly <- baltimore %>% group_by(year) %>% summarise(Total = sum(Emissions))
la.yearly <- la %>% group_by(year) %>% summarise(Total = sum(Emissions))
r <- c(0, 800+range(yearly$Total)[2]/1000)
r
par(mfrow = c(1,1)); plot.new();
p1 <- barplot(height = yearly$Total/1000, names.arg = yearly$year,
ylab = "Total PM2.5 Emissions in kilotons",
main = "PM2.5 Emissions, United States 1999-2008",
col = brewer.pal(4,"PRGn"), xlab = "Year", ylim = r)
text(x = p1, y = round(yearly$Total/1000,0),
labels = round(yearly$Total/1000,0), pos = 3)
SCC <- readRDS("NEI/Source_Classification_Code.rds")
SCC$Motor <- with(SCC, Data.Category == "Onroad")
SCC$Coal <- with(SCC, grepl("[Cc]oal", Short.Name, perl = T))
NEI <- readRDS("NEI/summarySCC_PM25.rds")
NEI.SCC <- merge.data.frame(NEI, SCC, by = "SCC")
yearly <- NEI.SCC %>% group_by(year) %>% summarise(Total = sum(Emissions))
baltimore <- subset(NEI.SCC, fips == "24510")
la <- subset(NEI.SCC, fips == "06037")
baltimore.yearly <- baltimore %>% group_by(year) %>% summarise(Total = sum(Emissions))
la.yearly <- la %>% group_by(year) %>% summarise(Total = sum(Emissions))
baltimore.yearly
r <- c(0, round(range(baltimore.yearly$Total/1000)[2],0)+1)
par(mfrow = c(1,1)); plot.new();
p1 <- barplot(height = baltimore.yearly$Total/1000, names.arg = baltimore.yearly$year,
ylab = "Total PM2.5 Emissions in kilotons", main = "PM2.5 Emissions,Baltimore 1999-2008",
col = c("green", "blue", "purple", "red"), xlab = "Year", ylim = r)
text(x = p1, y = round(baltimore.yearly$Total/1000,2), labels = round(yearly$TotaL/1000,0), pos = 3, cex = 1)
r <- c(0, round(range(baltimore.yearly$Total/1000)[2],0)+1)
par(mfrow = c(1,1)); plot.new();
p1 <- barplot(height = baltimore.yearly$Total/1000, names.arg = baltimore.yearly$year,
ylab = "Total PM2.5 Emissions in kilotons", main = "PM2.5 Emissions,Baltimore 1999-2008",
col = c("green", "blue", "purple", "red"), xlab = "Year", ylim = r)
text(x = p1, y = round(baltimore.yearly$Total/1000,2), labels = round(baltimore.yearly$TotaL/1000,0), pos = 3, cex = 1)
baltimore <- NEI.SCC %>% filter(fips == "24510") %>% group_by(year)%>% summarise(Total = sum(Emissions))
r <- c(0, round(range(baltimore$Total/1000)[2],0)+1)
par(mfrow = c(1,1)); plot.new();
p1 <- barplot(height = baltimore$Total/1000, names.arg = baltimore$year,
ylab = "Total PM2.5 Emissions in kilotons", main = "PM2.5 Emissions,Baltimore 1999-2008",
col = c("green", "blue", "purple", "red"), xlab = "Year", ylim = r)
text(x = p1, y = round(baltimore$Total/1000,2), labels = round(yearly$TotalEmissions/1000,0), pos = 3, cex = 1)
r <- c(0, round(range(baltimore.yearly$Total/1000)[2],0)+1)
par(mfrow = c(1,1)); plot.new();
p1 <- barplot(height = baltimore.yearly$Total/1000, names.arg = baltimore.yearly$year,
ylab = "Total PM2.5 Emissions in kilotons", main = "PM2.5 Emissions,Baltimore 1999-2008",
col = c("green", "blue", "purple", "red"), xlab = "Year", ylim = r)
text(x = p1, y = round(baltimore.yearly$Total/1000,2), labels = round(baltimore.yearly$TotaL/1000,0), pos = 3, cex = 1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set()
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
library(reshape2)
library(RColorBrewer)
setwd("~/Desktop/DataScience/coursera/projects/ExData/project2/")
# make sure the data files are there. If not download them
if(!dir.exists("NEI")) {
# does zip file already exist?
if(!file.exists("NEI.zip")) {
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip", destfile = "NEI.zip")
}
unzip("NEI.zip", exdir = "NEI")
file.remove("NEI.zip")
}
yearly <- NEI.SCC %>% group_by(year) %>% summarise(Total = sum(Emissions))
baltimore <- subset(NEI.SCC, fips == "24510")
la <- subset(NEI.SCC, fips == "06037")
baltimore.yearly <- baltimore %>% group_by(year) %>% summarise(Total = sum(Emissions))
la.yearly <- la %>% group_by(year) %>% summarise(Total = sum(Emissions))
r <- c(0, round(range(baltimore.yearly$Total/1000)[2],0)+1)
par(mfrow = c(1,1)); plot.new();
p1 <- barplot(height = baltimore.yearly$Total/1000, names.arg = baltimore.yearly$year,
ylab = "Total PM2.5 Emissions in kilotons", main = "PM2.5 Emissions,Baltimore 1999-2008",
col = c("green", "blue", "purple", "red"), xlab = "Year", ylim = r)
text(x = p1, y = round(baltimore.yearly$Total/1000,2), labels = round(baltimore.yearly$TotaL/1000,0), pos = 3, cex = 1)
p1 <- ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar()
p1
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity")
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + guides(fill = FALSE)
?labs
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + guides(fill = FALSE) + xlab(year)
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + guides(fill = FALSE) + xlab(baltimore.yearly$year)
p1 <- ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + guides(fill = FALSE)
str(p1)
?theme
?geom_bar
p1$scales
p1$scales$scales
baltimore.yearly$year
ggplot(baltimore.yearly, aes(year, Total, fill = year))
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity")
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + scale_x_continuous(labels = baltimore.yearly$year)
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity", breaks = 4) + scale_x_continuous(labels = baltimore.yearly$year)
ggplot(baltimore.yearly, aes(year, Total, fill = year, breaks = 4)) + geom_bar(stat = "identity") + scale_x_continuous(labels = baltimore.yearly$year)
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + scale_x_continuous(labels = baltimore.yearly$year, breaks = 4)
length(baltimore.yearly$year)
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + scale_x_continuous(labels = c("1","2","3","4"), breaks = 4)
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year)
ggplot(baltimore.yearly, aes(year, Total, fill = year)) + geom_bar(stat = "identity") + scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) + guides(fill = FALSE)
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
opts(axis.text.x=theme_blank(),
axis.ticks=theme_blank(),
axis.title.x=theme_blank(),
legend.title=theme_blank(),
axis.title.y=theme_blank()
)
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
theme(axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
legend.title=element_blank(),
axis.title.y=element_blank()
)
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) +
guides(fill = FALSE) +
theme(axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
legend.title=element_blank(),
axis.title.y=element_blank()
)
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) +
guides(fill = FALSE) + ggtitle(expression("Total PM[2.5]* Emissions in kilotons"))
theme(axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
legend.title=element_blank(),
axis.title.y=element_blank()
)
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) +
guides(fill = FALSE) + ggtitle(expression("Total "PM[2.5]*" Emissions in kilotons"))
theme(axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
legend.title=element_blank(),
axis.title.y=element_blank()
)
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) +
guides(fill = FALSE) + ggtitle(expression("Total "PM[2.5]*" Emissions in kilotons")) +
theme(axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
legend.title=element_blank(),
axis.title.y=element_blank()
)
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) +
guides(fill = FALSE) +
ggtitle(expression("Total PM"[2.5]*" emissions in Baltimore, 199902998")) +
theme(axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
legend.title=element_blank(),
axis.title.y=element_blank()
)
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) +
guides(fill = FALSE) +
ggtitle(expression("Total PM"[2.5]*" emissions in Baltimore, 199902998"))
ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) +
guides(fill = FALSE) +
ggtitle(expression("Total PM"[2.5]*" emissions in Baltimore, 1999-2008"))
library(grid)
library(gridExtra)
p1 <- ggplot(baltimore.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = baltimore.yearly$year, breaks = baltimore.yearly$year) +
guides(fill = FALSE) +
ggtitle(expression("Total PM"[2.5]*" emissions in Baltimore, 1999-2008"))
p2 <- ggplot(la.yearly, aes(year, Total, fill=year)) + geom_bar(stat="identity") +
geom_text(aes(label=Total), vjust=0) +
scale_x_continuous(labels = la.yearly$year, breaks = la.yearly$year) +
guides(fill = FALSE) +
ggtitle(expression("Total PM"[2.5]*" emissions in Los Angeles, 1999-2008"))
grid.newpage()
grid.arrange(p1,p2)
